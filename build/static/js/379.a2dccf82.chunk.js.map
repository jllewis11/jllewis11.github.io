{"version":3,"file":"static/js/379.a2dccf82.chunk.js","mappings":"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","sources":["components/panda_model/panda_voxel_loader.jsx","components/panda_model/panda_voxel.jsx"],"sourcesContent":["import { forwardRef } from 'react'\nimport { Box, Spinner } from '@chakra-ui/react'\n\n//Source code from craftzdog- homepage\n//https://github.com/craftzdog/craftzdog-homepage\n\nexport const PandaSpinner = () => (\n  <Spinner\n    size=\"xl\"\n    position=\"absolute\"\n    left=\"50%\"\n    top=\"50%\"\n    ml=\"calc(0px - var(--spinner-size) / 2)\"\n    mt=\"calc(0px - var(--spinner-size))\"\n  />\n)\n\nexport const PandaContainer = forwardRef(({ children }, ref) => (\n  <Box\n    ref={ref}\n    className=\"panda-voxel\"\n    m=\"auto\"\n    mt={['-20px', '-60px', '-120px']}\n    mb={['-40px', '-140px', '-200px']}\n    w={[280, 480, 640]}\n    h={[280, 480, 640]}\n    position=\"relative\"\n  >\n    {children}\n  </Box>\n))\n\nconst Loader = () => {\n  return (\n    <PandaContainer>\n      <PandaSpinner />\n    </PandaContainer>\n  )\n}\n\nexport default Loader\n","import { useState, useEffect, useRef, useCallback } from 'react'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { PandaSpinner, PandaContainer } from './panda_voxel_loader'\n\nfunction easeOutCirc(x) {\n  return Math.sqrt(1 - Math.pow(x - 1, 4))\n}\n\nfunction loadGLTFModel(\n    scene,\n    glbPath,\n    options = { receiveShadow: true, castShadow: true }\n  ) {\n    const { receiveShadow, castShadow } = options\n    return new Promise((resolve, reject) => {\n      const loader = new GLTFLoader()\n  \n      loader.load(\n        glbPath,\n        gltf => {\n          const obj = gltf.scene\n          obj.name = 'dog'\n          obj.position.y = 0\n          obj.position.x = 0\n          obj.receiveShadow = receiveShadow\n          obj.castShadow = castShadow\n          scene.add(obj)\n  \n          obj.traverse(function (child) {\n            if (child.isMesh) {\n              child.castShadow = castShadow\n              child.receiveShadow = receiveShadow\n            }\n          })\n          resolve(obj)\n        },\n        undefined,\n        function (error) {\n          reject(error)\n        }\n      )\n    })\n  }\n\nconst VoxelPanda = () => {\n  const refContainer = useRef()\n  const [loading, setLoading] = useState(true)\n  const [renderer, setRenderer] = useState()\n  const [_camera, setCamera] = useState()\n  const [target] = useState(new THREE.Vector3(-0.5, 1.2, 0))\n  const [initialCameraPosition] = useState(\n    new THREE.Vector3(\n      20 * Math.sin(0.2 * Math.PI),\n      10,\n      20 * Math.cos(0.2 * Math.PI)\n    )\n  )\n  const [scene] = useState(new THREE.Scene())\n  const [_controls, setControls] = useState()\n\n  const handleWindowResize = useCallback(() => {\n    const { current: container } = refContainer\n    if (container && renderer) {\n      const scW = container.clientWidth\n      const scH = container.clientHeight\n\n      renderer.setSize(scW, scH)\n    }\n  }, [renderer])\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const { current: container } = refContainer\n    if (container && !renderer) {\n      const scW = container.clientWidth\n      const scH = container.clientHeight\n\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      })\n      renderer.setPixelRatio(window.devicePixelRatio)\n      renderer.setSize(scW, scH)\n      renderer.outputEncoding = THREE.sRGBEncoding\n      container.appendChild(renderer.domElement)\n      setRenderer(renderer)\n\n      // 640 -> 240\n      // 8   -> 6\n      const scale = scH * 0.005 + 4.8\n      const camera = new THREE.OrthographicCamera(\n        -scale,\n        scale,\n        scale,\n        -scale,\n        0.01,\n        50000\n      )\n      camera.position.copy(initialCameraPosition)\n      camera.lookAt(target)\n      setCamera(camera)\n\n      const ambientLight = new THREE.AmbientLight(0xcccccc, 1)\n      scene.add(ambientLight)\n\n      const controls = new OrbitControls(camera, renderer.domElement)\n      controls.autoRotate = true\n      controls.target = target\n      setControls(controls)\n\n      loadGLTFModel(scene, '../src/assets/Panda.glb', {\n        receiveShadow: false,\n        castShadow: false\n      }).then(() => {\n        animate()\n        setLoading(false)\n      })\n\n      let req = null\n      let frame = 0\n      const animate = () => {\n        req = requestAnimationFrame(animate)\n\n        frame = frame <= 100 ? frame + 1 : frame\n\n        if (frame <= 100) {\n          const p = initialCameraPosition\n          const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20\n\n          camera.position.y = 10\n          camera.position.x =\n            p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed)\n          camera.position.z =\n            p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed)\n          camera.lookAt(target)\n        } else {\n          controls.update()\n        }\n\n        renderer.render(scene, camera)\n      }\n\n      return () => {\n        console.log('unmount')\n        cancelAnimationFrame(req)\n        renderer.dispose()\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize, false)\n    return () => {\n      window.removeEventListener('resize', handleWindowResize, false)\n    }\n  }, [renderer, handleWindowResize])\n\n  return (\n    <PandaContainer ref={refContainer}>\n      {loading && <PandaSpinner />}\n    </PandaContainer>\n  )\n}\n\nexport default VoxelPanda\n"],"names":["PandaSpinner","size","position","left","top","ml","mt","PandaContainer","forwardRef","ref","children","className","m","mb","w","h","refContainer","useRef","useState","loading","setLoading","renderer","setRenderer","setCamera","THREE","target","Math","sin","PI","cos","initialCameraPosition","scene","setControls","handleWindowResize","useCallback","container","current","scW","clientWidth","scH","clientHeight","setSize","useEffect","antialias","alpha","setPixelRatio","window","devicePixelRatio","outputEncoding","appendChild","domElement","scale","camera","copy","lookAt","ambientLight","add","controls","OrbitControls","autoRotate","glbPath","options","receiveShadow","castShadow","Promise","resolve","reject","GLTFLoader","load","gltf","obj","name","y","x","traverse","child","isMesh","undefined","error","loadGLTFModel","then","animate","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","z","update","render","console","log","cancelAnimationFrame","dispose","addEventListener","removeEventListener"],"sourceRoot":""}